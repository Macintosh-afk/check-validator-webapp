let tg = window.Telegram.WebApp;
tg.expand();

// –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –±–∞–Ω–∫–æ–≤
const banks = [
    { id: 'sber', name: '–°–±–µ—Ä–±–∞–Ω–∫', icon: 'üè¶' },
    { id: 'tinkoff', name: '–¢-–±–∞–Ω–∫', icon: 'üè¶' },
    { id: 'alfa', name: '–ê–ª—å—Ñ–∞ –±–∞–Ω–∫', icon: 'üè¶' },
    { id: 'raif', name: '–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω', icon: 'üè¶' },
    { id: 'vtb', name: '–í–¢–ë', icon: 'üè¶' },
    { id: 'otp', name: '–û–¢–ü', icon: 'üè¶' },
    { id: 'ozon', name: '–û–∑–æ–Ω', icon: 'üè¶' },
    { id: 'psb', name: '–ü–°–ë', icon: 'üè¶' },
    { id: 'yandex', name: '–Ø–Ω–¥–µ–∫—Å', icon: 'üè¶' },
    { id: 'uralsib', name: '–£—Ä–∞–ª—Å–∏–±', icon: 'üè¶' },
    { id: 'mts-money', name: '–ú–¢–° –¥–µ–Ω—å–≥–∏', icon: 'üè¶' },
    { id: 'mts-wallet', name: '–ö–æ—à–µ–ª–µ–∫ (–ú–¢–°)', icon: 'üè¶' },
    { id: 'mts-bank', name: '–ú–¢–° –ë–∞–Ω–∫', icon: 'üè¶' },
    { id: 'gazprom', name: '–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫', icon: 'üè¶' },
    { id: 'sovkom', name: '–°–æ–≤–∫–æ–º–±–∞–Ω–∫', icon: 'üè¶' },
    { id: 'russia', name: '–ê–ë –†–æ—Å—Å–∏—è', icon: 'üè¶' },
    { id: 'pochta', name: '–ü–æ—á—Ç–∞ –ë–∞–Ω–∫', icon: 'üè¶' },
    { id: 'domrf', name: '–î–æ–º.–†–§', icon: 'üè¶' },
    { id: 'rosselhoz', name: '–†–æ—Å—Å–µ–ª—å—Ö–æ–∑–±–∞–Ω–∫', icon: 'üè¶' },
    { id: 'mkb', name: '–ú–ö–ë', icon: 'üè¶' },
    { id: 'ubrir', name: '–£–ë–†–∏–†', icon: 'üè¶' }
];

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –±–∞–Ω–∫–æ–≤
function generateBankCards() {
    const banksGrid = document.querySelector('.banks-grid');
    banksGrid.innerHTML = banks.map(bank => `
        <div class="bank-card active" data-bank="${bank.id}">
            <span class="bank-icon">${bank.icon}</span>
            <span class="bank-name">${bank.name}</span>
        </div>
    `).join('');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
function handleFileUpload(file) {
    if (file.type !== 'application/pdf') {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ PDF —Ñ–∞–π–ª');
        return;
    }

    showLoading();
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞
    setTimeout(() => {
        hideLoading();
        addToHistory(file.name);
    }, 1500);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é
function addToHistory(fileName) {
    const historyList = document.getElementById('historyList');
    const date = new Date().toLocaleString();
    
    const historyItem = document.createElement('div');
    historyItem.className = 'history-item';
    historyItem.innerHTML = `
        <div style="flex: 1">
            <div style="font-weight: 500">${fileName}</div>
            <div style="color: var(--text-secondary); font-size: 12px">${date}</div>
        </div>
        <span style="color: var(--success)">‚úì</span>
    `;
    
    historyList.insertBefore(historyItem, historyList.firstChild);
}

// –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
function showLoading() {
    document.getElementById('loading').style.display = 'flex';
}

function hideLoading() {
    document.getElementById('loading').style.display = 'none';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    generateBankCards();
    
    const dropZone = document.getElementById('dropZone');
    const fileInput = document.getElementById('fileInput');
    const uploadButton = document.getElementById('uploadButton');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏
    uploadButton.addEventListener('click', () => {
        fileInput.click();
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
    fileInput.addEventListener('change', (e) => {
        if (e.target.files.length > 0) {
            handleFileUpload(e.target.files[0]);
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ drag & drop
    dropZone.addEventListener('dragover', (e) => {
        e.preventDefault();
        dropZone.classList.add('drag-over');
    });

    dropZone.addEventListener('dragleave', () => {
        dropZone.classList.remove('drag-over');
    });

    dropZone.addEventListener('drop', (e) => {
        e.preventDefault();
        dropZone.classList.remove('drag-over');
        
        if (e.dataTransfer.files.length > 0) {
            handleFileUpload(e.dataTransfer.files[0]);
        }
    });
});